# Generated by Django 4.2.13 on 2024-08-27 10:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('banner_id', models.AutoField(primary_key=True, serialize=False)),
                ('banner_img', models.CharField(max_length=255)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('banner_title', models.CharField(max_length=200)),
                ('banner_url', models.URLField()),
            ],
            options={
                'db_table': 'Banner',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('noti_id', models.AutoField(primary_key=True, serialize=False)),
                ('noti_title', models.TextField(blank=True, null=True)),
                ('noti_text', models.TextField(blank=True, null=True)),
                ('noti_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_text', models.TextField(blank=True, null=True)),
                ('post_img', models.TextField(blank=True, null=True)),
                ('post_date', models.DateTimeField()),
                ('post_likes', models.IntegerField(default=0)),
                ('post_score', models.IntegerField(default=0, null=True)),
                ('post_hashtag', models.CharField(blank=True, max_length=100, null=True)),
                ('post_view', models.IntegerField(default=0)),
                ('last_modified', models.DateTimeField()),
                ('comm_cnt', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Post',
            },
        ),
        migrations.CreateModel(
            name='TourKeyword',
            fields=[
                ('keyword_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword_name', models.CharField(max_length=45)),
                ('search_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'TourKeyword',
            },
        ),
        migrations.CreateModel(
            name='TourPlace',
            fields=[
                ('tour_id', models.AutoField(primary_key=True, serialize=False)),
                ('tour_name', models.CharField(max_length=100)),
                ('tour_location', models.CharField(max_length=255)),
                ('tour_x', models.FloatField()),
                ('tour_y', models.FloatField()),
                ('tour_info', models.TextField()),
                ('tour_img', models.TextField()),
                ('tour_viewcnt', models.IntegerField(default=0)),
                ('tour_viewcnt_month', models.IntegerField(default=0)),
                ('tour_summary', models.TextField()),
                ('tour_tel', models.CharField(blank=True, max_length=45, null=True)),
                ('tour_telname', models.CharField(blank=True, max_length=45, null=True)),
                ('tour_title', models.CharField(blank=True, max_length=45, null=True)),
                ('areacode', models.IntegerField(blank=True, null=True)),
                ('createdtime', models.DateTimeField(blank=True, null=True)),
                ('sigungucode', models.IntegerField(blank=True, null=True)),
                ('opening_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('tour_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('fees', models.CharField(blank=True, max_length=255, null=True)),
                ('restrooms', models.CharField(blank=True, max_length=255, null=True)),
                ('accessibility', models.CharField(blank=True, max_length=255, null=True)),
                ('parking', models.CharField(blank=True, max_length=255, null=True)),
                ('search_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'TourPlace',
            },
        ),
        migrations.CreateModel(
            name='User_Preference',
            fields=[
                ('userpre_id', models.AutoField(primary_key=True, serialize=False)),
                ('preference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to='community.tourkeyword')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User_has_Preference',
            },
        ),
        migrations.CreateModel(
            name='TourPlace_TourKeyword',
            fields=[
                ('placekey_id', models.IntegerField(primary_key=True, serialize=False)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourkeyword', to='community.tourkeyword')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourplace', to='community.tourplace')),
            ],
            options={
                'db_table': 'TourPlace_has_TourKeyword',
            },
        ),
        migrations.CreateModel(
            name='TourLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('search_date', models.DateTimeField(auto_now_add=True)),
                ('search_text', models.CharField(max_length=100)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usertourlog', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'TourLog',
            },
        ),
        migrations.CreateModel(
            name='PostLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('search_date', models.DateField()),
                ('search_text', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userpostlog', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PostLog',
            },
        ),
        migrations.CreateModel(
            name='PostLikes',
            fields=[
                ('plikes_id', models.AutoField(primary_key=True, serialize=False)),
                ('like_date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postlike', to='community.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userlikepost', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'PostLikes',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourplacepost', to='community.tourplace'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userpost', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('likes_id', models.AutoField(primary_key=True, serialize=False)),
                ('like_date', models.DateTimeField(auto_now_add=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourplacelike', to='community.tourplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userlike', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comments_id', models.AutoField(primary_key=True, serialize=False)),
                ('comments_date', models.DateTimeField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourplacecomment', to='community.tourplace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercomment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Comments',
            },
        ),
    ]
